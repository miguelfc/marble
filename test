#!/bin/bash
#
# Auth Agent startup script
#

PROJECT=marble
JAVA_VERSION="1.8"

SCRIPT_PATH=/opt/marble/script
AUTH_AGENT_HOME=$SCRIPT_PATH/../
export AUTH_AGENT_HOME

getpid() {
    pid=`pgrep -f "java.*$PROJECT"`
}


    if [[ -n "$JAVA_HOME" ]] && [[ -x "$JAVA_HOME/bin/java" ]];  then
        echo Found java executable in JAVA_HOME
        JAVA_CMD="$JAVA_HOME/bin/java"
    elif [[ -n "$JAVA" ]] && [[ -x "$JAVA" ]];  then
        echo Found java executable by JAVA
        JAVA_CMD="$JAVA"
    elif type -p java; then
        echo Found java executable in PATH
        JAVA_CMD=java
    else
        echo "Cannot find a Java JDK. Please set JAVA_HOME, JAVA executable or put java (>=1.8) in your PATH."
        exit 1
    fi

    if [[ "$JAVA_CMD" ]]; then
        version=$("$JAVA_CMD" -version 2>&1 | awk -F '"' '/version/ {print $2}')
        if [[ "$version" > $JAVA_VERSION ]]; then
        echo Java version "$version"
        else
        echo JAVA_CMD=$JAVA_CMD
        echo Java version "$version" is less than required $JAVA_VERSION
        exit 1
        fi
    fi

    cd "$AUTH_AGENT_HOME"
    echo -n "AUTH_AGENT_HOME="
    pwd

    echo "$JAVA_CMD" -classpath config:lib/stanford-corenlp-3.6.0.jar:lib/stanford-corenlp-3.6.0-models.jar:$PROJECT.jar org.springframework.boot.loader.JarLauncher > log/marble.log 2>&1 &
exit 0
    echo -ne "Starting process"
    for i in {1..10}; do
        if ! [ -n "$pid" ]; then
            echo -ne "."
            sleep 1
            getpid
        fi
    done
    echo

    if [ -n "$pid" ]
        then status
        else echo "Error during $PROJECT starting, see log for details."
    fi

exit 0

